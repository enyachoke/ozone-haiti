<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ozonehis</groupId>
    <artifactId>maven-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <groupId>com.ozonehis</groupId>
  <artifactId>ozone-haiti</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
    <!-- Classifier for the dependency report artifact -->
    <dependencyReportClassifier>dependencies</dependencyReportClassifier>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozone</artifactId>
      <type>zip</type>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozone-scripts</artifactId>
      <type>zip</type>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>

    <!-- TODO: Add any implementation-specific dependencies -->
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <!-- Exclude files from Ozone -->
            <id>Exclude unneeded Ozone files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.build.directory}/ozone</directory>
                  <excludes>
                    <!-- Effectively disable inherited exclusions -->
                    <exclude>non-existing_file</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <id>Rebuild OpenMRS Frontend if necessary</id>
            <goals>
              <goal>execute</goal>
            </goals>
            <!-- Disable this inherited execution -->
            <phase>none</phase>
            <configuration>
              <scripts>
                <script>
                  file://${project.build.directory}/openmrs/frontend_assembly/build-openmrs-frontend.groovy</script>
              </scripts>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Compile a dependency report -->
       <plugin>
        <groupId>net.mekomsolutions.maven.plugin</groupId>
        <artifactId>dependency-tracker-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>Compile dependency report</id>
            <phase>compile</phase>
            <goals>
              <goal>track</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Attach the dependency report to the build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>Attach the dependency report</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>
                    ${project.build.directory}/${project.artifactId}-${project.version}-dependencies.txt</file>
                  <type>txt</type>
                  <classifier>${dependencyReportClassifier}</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>validator</id>
      <activation>
        <jdk>1.8</jdk>
        <property>
          <name>env.CI</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- hooking the OpenMRS config validation to the integration-test phase -->
          <plugin>
            <groupId>org.openmrs.maven.plugins</groupId>
            <artifactId>openmrs-packager-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>Validate OpenMRS configuration</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>validate-configurations</goal>
                </goals>
                <configuration>
                  <sourceDir>
                    ${project.build.directory}/${project.artifactId}-${project.version}/distro/configs/openmrs/initializer_config</sourceDir>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>mks-nexus-public</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-public/</url>
    </repository>
    <repository>
      <id>openmrs-repo</id>
      <name>OpenMRS Nexus Repository</name>
      <url>https://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>openmrs-repo</id>
      <name>OpenMRS Nexus Repository</name>
      <url>https://mavenrepo.openmrs.org/nexus/content/repositories/public</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>openmrs-snapshots</id>
      <name>OpenMRS Public Repository</name>
      <url>https://mavenrepo.openmrs.org/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>mks-nexus-public</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-public/</url>
    </pluginRepository>
    <pluginRepository>
      <id>mks-nexus-snapshots</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  <distributionManagement>
    <repository>
      <name>Mekom Solutions Nexus repo for releases</name>
      <id>mks-nexus-public-releases</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-releases</url>
    </repository>
    <snapshotRepository>
      <name>Mekom Solutions Nexus repo for snapshots</name>
      <id>mks-nexus-public-snapshots</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-snapshots</url>
    </snapshotRepository>
  </distributionManagement>
</project>